ARG DEVEL_CUDA
ARG RUNTIME_CUDA

FROM datadrone/deeplearn_opencv_base:$DEVEL_CUDA AS builder

USER root
WORKDIR /opt

# build opencv
ENV OPENCV_VERSION="4.5.3"
RUN wget https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.zip \
&& wget -O opencv_contrib.zip  https://github.com/opencv/opencv_contrib/archive/${OPENCV_VERSION}.zip \
&& unzip ${OPENCV_VERSION}.zip \
&& unzip opencv_contrib.zip \
&& mkdir /opt/opencv-${OPENCV_VERSION}/cmake_binary \
&& cd /opt/opencv-${OPENCV_VERSION}/cmake_binary \
&& cmake -DBUILD_TIFF=ON \
  -DCMAKE_LIBRARY_PATH=/usr/local/cuda/lib64/stubs \
  -DENABLE_PRECOMPILED_HEADERS=OFF \
  -DBUILD_opencv_java=OFF \
  -DBUILD_OPENCV_PYTHON=ON \
  -DWITH_CUDA=ON \
  -D WITH_CUDNN=ON \
  -D OPENCV_DNN_CUDA=ON \
  -DCUDA_FAST_MATH=ON \
  -DCUDA_ARCH_BIN=7.5 \
  -D WITH_CUBLAS=1 \
  -DOPENCV_ENABLE_NONFREE=ON \
  -DENABLE_FAST_MATH=1 \
  -DWITH_OPENGL=ON \
  -DWITH_GSTREAMER=ON \
  -DWITH_IPP=ON \
  -DWITH_TBB=ON \
  -DWITH_EIGEN=ON \
  -DWITH_V4L=ON \
  -DBUILD_TESTS=OFF \
  -DBUILD_PERF_TESTS=OFF \
  -DCMAKE_BUILD_TYPE=RELEASE \
  -DOPENCV_EXTRA_MODULES_PATH=/opt/opencv_contrib-${OPENCV_VERSION}/modules \
  -DBUILD_opencv_python2=OFF \
  -DCMAKE_INSTALL_PREFIX=$(python3 -c "import sys; print(sys.prefix)") \
  -DPYTHON_EXECUTABLE=$(which python)  \
  -DPYTHON_DEFAULT_EXECUTABLE=/opt/conda/envs/computer_vision/bin/python \
  .. \ 
&& make install -j28

RUN rm /opt/${OPENCV_VERSION}.zip

# cling manual deps
#RUN conda install binutils_impl_linux-64 binutils_linux-64 clang_variant -c conda-forge && \
#    conda install gcc_impl_linux-64 gxx_linux-64 gxx_impl_linux-64 gxx_linux-64 -c conda-forge && \
#    conda install nlohmann_json pugixml xtl cppzmq -c conda-forge && \
#    conda install clangdev  -c conda-forge 
    
# no deps to stop messing with mkl
#RUN conda install -y --no-deps xeus-cling cling -c conda-forge
# there is a new conda path we need to check in the container
#WORKDIR /opt/conda/python
#RUN python setup.py develop

WORKDIR $HOME

USER $NB_USER

##################################### 2nd stage

FROM datadrone/deeplearn_opencv_base:$RUNTIME_CUDA AS runtime
ENV OPENCV_VERSION="4.5.3"
COPY --from=builder --chown=$NB_USER:users /opt/opencv-${OPENCV_VERSION}/cmake_binary /opt/opencv-${OPENCV_VERSION}/cmake_binary
SHELL ["conda", "run", "-n", "computer_vision", "/bin/bash", "-c"]

WORKDIR $HOME
USER $NB_USER

RUN python /opt/opencv-${OPENCV_VERSION}/cmake_binary/python_loader/setup.py install

